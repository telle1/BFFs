[{"/Users/tiffanyyelle/src/Project3/client/src/index.js":"1","/Users/tiffanyyelle/src/Project3/client/src/reportWebVitals.js":"2","/Users/tiffanyyelle/src/Project3/client/src/App.js":"3","/Users/tiffanyyelle/src/Project3/client/src/components/Hero/hero.js":"4","/Users/tiffanyyelle/src/Project3/client/src/components/Invite/invite.js":"5","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/allcards.js":"6","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/card.js":"7","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/question.js":"8","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/questionDropdown.js":"9","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/ansOption.js":"10","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/addAns.js":"11","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerCards.js":"12","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerName.js":"13","/Users/tiffanyyelle/src/Project3/client/src/components/Results/results.js":"14","/Users/tiffanyyelle/src/Project3/client/src/components/Results/myResults.js":"15","/Users/tiffanyyelle/src/Project3/client/src/components/Results/myresults.js":"16"},{"size":500,"mtime":1607375890745,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1607375890747,"results":"19","hashOfConfig":"18"},{"size":9676,"mtime":1607748257732,"results":"20","hashOfConfig":"18"},{"size":1236,"mtime":1607743825569,"results":"21","hashOfConfig":"18"},{"size":703,"mtime":1607717576773,"results":"22","hashOfConfig":"18"},{"size":4199,"mtime":1607733555571,"results":"23","hashOfConfig":"18"},{"size":4056,"mtime":1607723242385,"results":"24","hashOfConfig":"18"},{"size":599,"mtime":1607460561643,"results":"25","hashOfConfig":"18"},{"size":1208,"mtime":1607460606840,"results":"26","hashOfConfig":"18"},{"size":2013,"mtime":1607629844430,"results":"27","hashOfConfig":"18"},{"size":346,"mtime":1607459508402,"results":"28","hashOfConfig":"18"},{"size":5209,"mtime":1607748306583,"results":"29","hashOfConfig":"18"},{"size":1046,"mtime":1607745864918,"results":"30","hashOfConfig":"18"},{"size":1755,"mtime":1607748096428,"results":"31","hashOfConfig":"18"},{"size":1276,"mtime":1607746585759,"results":"32","hashOfConfig":"18"},{"size":1276,"mtime":1607746585759,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"2kkxo5",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tiffanyyelle/src/Project3/client/src/index.js",[],["72","73"],"/Users/tiffanyyelle/src/Project3/client/src/reportWebVitals.js",[],"/Users/tiffanyyelle/src/Project3/client/src/App.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Hero/hero.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Invite/invite.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/allcards.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/card.js",["74","75","76"],"import React, { useEffect, useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport './card.css';\nimport AnsOption from './answer/ansOption';\nimport AddAnswer from './answer/addAns';\nimport Question from './question/question';\nimport QuestionDropdown from './question/questionDropdown';\n\nfunction Card({\n  questionNumber,\n  cardColor,\n  premadeQuestions,\n  defaultQ,\n  defaultA,\n  quizInfo,\n  setQuizInfo,\n}) {\n  const [question, setQuestion] = useState(defaultQ);\n  const [customQ, setCustomQ] = useState(false);\n  const [ansOptions, setAnsOptions] = useState(defaultA);\n  const [correctAnswer, setCorrectAnswer] = useState(\"\")\n  const [bgColor, setBgColor] = useState(cardColor);\n\n  useEffect(() => {\n    setQuizInfo((quizInfo) => [\n      ...quizInfo,\n      {\n        number: questionNumber,\n        bgColor: bgColor,\n        question: question,\n        correctAnswer: correctAnswer,\n        answerOptions: ansOptions,\n      },\n    ]);\n  }, [bgColor, correctAnswer, ansOptions, question]);\n  \n\n  const changeCardColor = (color) => {\n    setBgColor(color);\n  };\n\n  return (\n    <Row key={questionNumber} className='mb-5'>\n      <Col>\n        <div className='card' style={{ backgroundColor: bgColor }}>\n          <div className='card-content'>\n            <h2 className='font-weight-bold'>QUESTION {questionNumber}</h2>\n            {/* Question Components */}\n            <div className='question mb-2'>\n              {/* Question input field */}\n              <Question\n                question={question}\n                setQuestion={setQuestion}\n                customQ={customQ}\n                setAnsOptions={setAnsOptions}\n              />\n              {/* Additional Question Options/Dropdown */}\n              <QuestionDropdown\n                premadeQuestions={premadeQuestions}\n                setQuestion={setQuestion}\n                setAnsOptions={setAnsOptions}\n                setCustomQ={setCustomQ}\n              />\n            </div>\n\n            {/* Answer Components */}\n            <div>\n              {/* Answer Options */}\n              {/* {console.log('LIST OF ANS OPTIONS', ansOptions)} */}\n              {ansOptions.map((ansOption, i) => (\n                <AnsOption\n                  key={i}\n                  id={i}\n                  ansOption={ansOption}\n                  ansOptions={ansOptions}\n                  setAnsOptions={setAnsOptions}\n                  correctAnswer={correctAnswer}\n                  setCorrectAnswer={setCorrectAnswer}\n                  questionNumber={questionNumber}\n                  quizInfo={quizInfo}\n                  setQuizInfo={setQuizInfo}\n                  correctAnswer={correctAnswer}\n                  questionNumber={questionNumber}\n                />\n\n              ))}\n              {/* Add Answer Option */}\n              {ansOptions.length < 6 ? (\n                <AddAnswer\n                  ansOptions={ansOptions}\n                  setAnsOptions={setAnsOptions}\n                />\n              ) : null}\n            </div>\n\n            {/* Change card background color */}\n            <div className='mt-2 d-flex justify-content-center'>\n              {[\n                '#FF9AA2',\n                '#FFB7B2',\n                '#FFB347',\n                '#FFDAC1',\n                '#B5EAD7',\n                '#E2F0CB',\n                '#85E3FF',\n                '#ACE7FF',\n                '#B28DFF',\n                '#97A2FF',\n              ].map((color) => (\n                <div\n                  className='btn pick-a-color mr-1'\n                  style={{ backgroundColor: color }}\n                  onClick={() => changeCardColor(color)}\n                ></div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Card;\n\n//    // let updateBgColor = quizInfo.map((questionInfo, i) => {\n    //   if (i + 1 == questionNumber) {\n    //     return { ...questionInfo, bgColor: color};\n    //   } else {\n    //     return questionInfo;\n    //   }\n    // });\n    // setQuizInfo(updateBgColor);\n","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/question.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/questionDropdown.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/ansOption.js",["77"],"import React, { useEffect, useState } from 'react';\nimport './ansOption.css';\n\nfunction AnsOption({\n  id,\n  ansOption,\n  setAnsOptions,\n  ansOptions, questionNumber,\n  setCorrectAnswer,\n  setQuizInfo, quizInfo,\n  correctAnswer,\n}) {\n  const [ansText, setAnsText] = useState();\n  useEffect(() => {\n    setAnsText(ansOption);\n  }, [ansOption]);\n\n  const rmvAnswer = (e) => {\n    e.preventDefault();\n    const newAnsOptions = ansOptions.filter((ans, i) => i !== id);\n    setAnsOptions(newAnsOptions);\n  };\n\n  return (\n    <div className='answer-choice d-flex justify-content-center align-items-center'>\n      <input\n        key={id}\n        type='radio'\n        id={id}\n        name='answer_options'\n        value={ansText}\n        className='mr-1'\n        onClick={() => {\n          setCorrectAnswer(id + 1);\n        //   let updateCorrectAns = quizInfo.map((questionInfo, i) => {\n        //      if (i + 1 == questionNumber){\n        //       return {...questionInfo, correctAnswer: correctAnswer};\n        //       } else {\n        //         return questionInfo\n        //       }\n        // })\n        // setQuizInfo(updateCorrectAns)\n      }}\n        required\n      />\n      <label htmlFor='answer-option' className='my-0 mr-2'>\n        <textarea\n          rows='2'\n          className='answer-option'\n          value={ansText}\n          onChange={(e) => {\n            setAnsText(e.target.value);\n\n            let updatedAnsOptions = ansOptions.map((ansOption, i) => {\n              if (i == id) {\n                console.log('WHTS IN ANS OPTION', ansOption);\n                return (ansOption = e.target.value);\n              } else {\n                return ansOption;\n              }\n            });\n            setAnsOptions(updatedAnsOptions);\n          }} //setAnsOptions(e.target.value)\n        ></textarea>\n      </label>\n\n      <button className='btn' onClick={rmvAnswer}>\n        <i className='fas fa-times' style={{ color: 'white' }}></i>\n      </button>\n    </div>\n  );\n}\n\nexport default AnsOption;\n","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/addAns.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerCards.js",["78","79","80"],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerName.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Results/results.js",["81","82"],"import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport './results.css'\n\n////history.push({pathname: '/results/${match.params.quizId}', state:{score: score, name: name}})\n\nfunction Results() {\n  const [allResults, setAllResults] = useState([]);\n  const location = useLocation();\n\n  console.log('WHAT IS IN ALL RESULTS', allResults);\n\n  useEffect(() => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    const body = JSON.stringify({\n      name: location.state.name,\n      score: location.state.score,\n    });\n\n    axios\n      .post(`/api/results/${location.state.match.params.quizId}`, body, config) // change to paramsId\n      .then((res) => {\n        setAllResults(res.data.allResults);\n      });\n  }, []);\n\n  //Cannot read property 'params' of undefined\n\n  return (\n    <div className=\"results\">\n    <div className = \"card result-card mt-5\">\n      <h1 className=\"result-card-title\">user's BFFs</h1>\n\n      {allResults.length > 0\n        ? allResults.map(result => (\n            <p> {result.friendName} {result.score} </p>\n         ))\n        : null}\n    </div>\n    </div>\n  );\n}\n\n\nfunction ResultCard({ result }){\n  return (\n    <React.Fragment>\n        <h1>user's BFFs</h1>\n        <div className=\"card\">\n          test2342\n        </div>\n    </React.Fragment>\n  )\n}\n\n\n\n\n\nexport default Results;\n","/Users/tiffanyyelle/src/Project3/client/src/components/Results/myResults.js",["83","84","85","86"],"import './myresults.css';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nfunction MyResults() {\n  const [roomCode, setRoomCode] = useState('');\n  const [pin, setPin] = useState('');\n  const [showResults, setShowResults] = useState(false);\n\n  const handleResults = (e) => {\n    e.preventDefault();\n    // axios.post('url', config, body)\n  };\n\n  return (\n    <React.Fragment>\n      {showResults ? (\n        <div>hi </div>\n      ) : (\n        <div className='my-results-prompt'>\n          <h1 className='who-is-my-bff'>Who is my BFF?</h1>\n          <form onSubmit={handleResults}>\n            <div className='results-input d-flex flex-column'>\n              <input\n                type='text'\n                className='code-input'\n                placeholder='Room code'\n                value={roomCode}\n              ></input>\n              <input\n                type='text'\n                className='pin-input'\n                placeholder='Pin'\n                value={pin}\n              ></input>\n              <br />\n              <button type='submit' className='btn btn-blue'>\n                Let's find out!\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default MyResults;\n",["87","88"],"/Users/tiffanyyelle/src/Project3/client/src/components/Results/myresults.js",["89","90","91","92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":35,"column":6,"nodeType":"99","endLine":35,"endColumn":52,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":82,"column":19,"nodeType":"103","endLine":82,"endColumn":48},{"ruleId":"101","severity":1,"message":"102","line":83,"column":19,"nodeType":"103","endLine":83,"endColumn":50},{"ruleId":"104","severity":1,"message":"105","line":55,"column":21,"nodeType":"106","messageId":"107","endLine":55,"endColumn":23},{"ruleId":"97","severity":1,"message":"108","line":22,"column":6,"nodeType":"99","endLine":22,"endColumn":8,"suggestions":"109"},{"ruleId":"97","severity":1,"message":"110","line":108,"column":6,"nodeType":"99","endLine":108,"endColumn":8,"suggestions":"111"},{"ruleId":"104","severity":1,"message":"105","line":114,"column":16,"nodeType":"106","messageId":"107","endLine":114,"endColumn":18},{"ruleId":"97","severity":1,"message":"112","line":30,"column":6,"nodeType":"99","endLine":30,"endColumn":8,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":50,"column":10,"nodeType":"116","messageId":"117","endLine":50,"endColumn":20},{"ruleId":"114","severity":1,"message":"118","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":13},{"ruleId":"114","severity":1,"message":"119","line":5,"column":20,"nodeType":"116","messageId":"117","endLine":5,"endColumn":31},{"ruleId":"114","severity":1,"message":"120","line":6,"column":15,"nodeType":"116","messageId":"117","endLine":6,"endColumn":21},{"ruleId":"114","severity":1,"message":"121","line":7,"column":23,"nodeType":"116","messageId":"117","endLine":7,"endColumn":37},{"ruleId":"93","replacedBy":"122"},{"ruleId":"95","replacedBy":"123"},{"ruleId":"114","severity":1,"message":"118","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":13},{"ruleId":"114","severity":1,"message":"119","line":5,"column":20,"nodeType":"116","messageId":"117","endLine":5,"endColumn":31},{"ruleId":"114","severity":1,"message":"120","line":6,"column":15,"nodeType":"116","messageId":"117","endLine":6,"endColumn":21},{"ruleId":"114","severity":1,"message":"121","line":7,"column":23,"nodeType":"116","messageId":"117","endLine":7,"endColumn":37},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'questionNumber' and 'setQuizInfo'. Either include them or remove the dependency array. If 'setQuizInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["126"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'match.params.quizId'. Either include it or remove the dependency array.",["127"],"React Hook useEffect has missing dependencies: 'id' and 'numToLetter'. Either include them or remove the dependency array. If 'setLetterChoice' needs the current value of 'id', you can also switch to useReducer instead of useState and read 'id' in the reducer.",["128"],"React Hook useEffect has missing dependencies: 'location.state.match.params.quizId', 'location.state.name', and 'location.state.score'. Either include them or remove the dependency array.",["129"],"no-unused-vars","'ResultCard' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'setRoomCode' is assigned a value but never used.","'setPin' is assigned a value but never used.","'setShowResults' is assigned a value but never used.",["124"],["125"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [bgColor, correctAnswer, ansOptions, question, setQuizInfo, questionNumber]",{"range":"138","text":"139"},"Update the dependencies array to be: [match.params.quizId]",{"range":"140","text":"141"},"Update the dependencies array to be: [id, numToLetter]",{"range":"142","text":"143"},"Update the dependencies array to be: [location.state.match.params.quizId, location.state.name, location.state.score]",{"range":"144","text":"145"},[962,1008],"[bgColor, correctAnswer, ansOptions, question, setQuizInfo, questionNumber]",[705,707],"[match.params.quizId]",[3307,3309],"[id, numToLetter]",[835,837],"[location.state.match.params.quizId, location.state.name, location.state.score]"]
[{"/Users/tiffanyyelle/src/Project3/client/src/index.js":"1","/Users/tiffanyyelle/src/Project3/client/src/reportWebVitals.js":"2","/Users/tiffanyyelle/src/Project3/client/src/App.js":"3","/Users/tiffanyyelle/src/Project3/client/src/components/Hero/hero.js":"4","/Users/tiffanyyelle/src/Project3/client/src/components/Invite/invite.js":"5","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/allcards.js":"6","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/card.js":"7","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/question.js":"8","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/questionDropdown.js":"9","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/ansOption.js":"10","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/addAns.js":"11","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerCards.js":"12","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerName.js":"13","/Users/tiffanyyelle/src/Project3/client/src/components/Results/results.js":"14","/Users/tiffanyyelle/src/Project3/client/src/components/Results/myResults.js":"15","/Users/tiffanyyelle/src/Project3/client/src/components/Results/myresults.js":"16","/Users/tiffanyyelle/src/Project3/client/src/components/Navbar/navbar.js":"17"},{"size":500,"mtime":1607375890745,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1607375890747,"results":"20","hashOfConfig":"19"},{"size":9755,"mtime":1607933295363,"results":"21","hashOfConfig":"19"},{"size":1236,"mtime":1607998949848,"results":"22","hashOfConfig":"19"},{"size":1104,"mtime":1607915857502,"results":"23","hashOfConfig":"19"},{"size":8347,"mtime":1607998475676,"results":"24","hashOfConfig":"19"},{"size":7711,"mtime":1607999382622,"results":"25","hashOfConfig":"19"},{"size":765,"mtime":1607997805774,"results":"26","hashOfConfig":"19"},{"size":1454,"mtime":1607997959269,"results":"27","hashOfConfig":"19"},{"size":6126,"mtime":1607999428990,"results":"28","hashOfConfig":"19"},{"size":857,"mtime":1607998033336,"results":"29","hashOfConfig":"19"},{"size":4718,"mtime":1607919314170,"results":"30","hashOfConfig":"19"},{"size":2029,"mtime":1607891849986,"results":"31","hashOfConfig":"19"},{"size":2007,"mtime":1607932563803,"results":"32","hashOfConfig":"19"},{"size":1276,"mtime":1607746585759,"results":"33","hashOfConfig":"19"},{"size":3384,"mtime":1607932708998,"results":"34","hashOfConfig":"19"},{"size":529,"mtime":1607934364496,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"2kkxo5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/tiffanyyelle/src/Project3/client/src/index.js",[],["74","75"],"/Users/tiffanyyelle/src/Project3/client/src/reportWebVitals.js",[],"/Users/tiffanyyelle/src/Project3/client/src/App.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Hero/hero.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Invite/invite.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/allcards.js",["76"],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/card.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/question.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/questionDropdown.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/ansOption.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/addAns.js",["77"],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerCards.js",["78","79","80"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col } from 'react-bootstrap';\nimport './quizTakerCards.css';\nimport axios from 'axios';\n\nfunction QuizTakerCards({ name, match, quizCards, quizOwner }) {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [showAns, setShowAns] = useState()\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (showResults) {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const body = JSON.stringify({\n        name: name,\n        score: score,\n      });\n\n      axios\n        .post(`/api/results/${match.params.quizId}`, body, config) // change to paramsId\n        .then((res) => {\n          history.push({\n            pathname: `/results/${match.params.quizId}`,\n            state: {\n              allResults: res.data.allResults,\n              friendScore: score,\n              quizOwner: quizOwner,\n            },\n          });\n        });\n    }\n  }, [showResults]); //so that score is not one state behind\n\n  return (\n    <div className='show-cards'>\n      <h1 className='how-well-header mt-3'>\n        How well do you know {quizOwner}, {name}?\n      </h1>\n      <Row key={quizCards.questionNumber} className='mb-5 mt-4'>\n        <Col>\n          <div\n            className='card card-left'\n            style={{ backgroundColor: quizCards[currentQuestion].bgColor }}\n          >\n            <div className='card-content'>\n              <h2 className='font-weight-bold'>\n                QUESTION {quizCards[currentQuestion].number}\n              </h2>\n              {/* Question */}\n              <h4 className='question mb-2'>\n                {quizCards[currentQuestion].question}\n              </h4>\n\n              <div>\n                {/* Answer Options */}\n                {quizCards[currentQuestion].answerOptions.map(\n                  (ansOption, i) => (\n                    <AnsOption\n                      key={i}\n                      id={i}\n                      ansOption={ansOption}\n                      currentQuestion={currentQuestion}\n                      setCurrentQuestion={setCurrentQuestion}\n                      quizCards={quizCards}\n                      setScore={setScore}\n                      setShowResults={setShowResults} setShowAns={setShowAns}\n                    />\n                  )\n                )}\n              </div>\n              <div className=\"text-danger\">\n                <h2>  {showAns}</h2>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction AnsOption({\n  ansOption,\n  id,\n  currentQuestion,\n  setCurrentQuestion,\n  quizCards,\n  setScore,\n  setShowResults, setShowAns\n}) {\n  const [btnColor, setBtnColor] = useState('white');\n  const [letterChoice, setLetterChoice] = useState('');\n  const [letterBgCol, setLetterBgCol] = useState('');\n\n  let numToLetter = {\n    0: { letter: 'A', bgColor: '#FFB7B2' },\n    1: { letter: 'B', bgColor: '#FFDAC1' },\n    2: { letter: 'C', bgColor: '#F8F9CA' },\n    3: { letter: 'D', bgColor: '#B5EAD7' },\n    4: { letter: 'E', bgColor: '#C7CEEA' },\n    5: { letter: 'F', bgColor: '#FF9AA2' },\n  };\n\n  useEffect(() => {\n    setLetterChoice(numToLetter[String(id)].letter);\n    setLetterBgCol(numToLetter[String(id)].bgColor);\n  }, []);\n\n  const changeQuestion = () => {\n    const nextQuestion = currentQuestion + 1;\n    if (id + 1 == quizCards[currentQuestion].correctAnswer) {\n      setScore((score) => score + 1);\n      setBtnColor('#90ee90');\n    } else {\n      setBtnColor('#ff3232');\n      setShowAns(numToLetter[(quizCards[currentQuestion].correctAnswer)-1].letter)\n    }\n\n    setTimeout(() => {\n      setBtnColor('white');\n      setShowAns('')\n      if (nextQuestion < quizCards.length) {\n        setCurrentQuestion(currentQuestion + 1);\n      } else {\n        setShowResults(true);\n      }\n    }, 1000);\n  };\n\n  return (\n    <div className='div-answer-choice py-3'>\n      <button\n        onClick={() => changeQuestion()}\n        style={{ backgroundColor: btnColor }}\n        className='btn btn-answer-choice py-0 px-0'\n      >\n        <Row>\n          <Col xs={2}>\n            <div\n              className='letter-choice d-flex justify-content-center align-items-center'\n              style={{ backgroundColor: letterBgCol }}\n            >\n              {letterChoice}\n            </div>\n          </Col>\n          <Col xs={10} className='btn-column py-2'>\n            {ansOption}\n          </Col>\n        </Row>\n      </button>\n    </div>\n  );\n}\n\nexport default QuizTakerCards;\n","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerName.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Results/results.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Results/myResults.js",["81","82","83","84"],"import './myresults.css';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nfunction MyResults() {\n  const [roomCode, setRoomCode] = useState('');\n  const [pin, setPin] = useState('');\n  const [showResults, setShowResults] = useState(false);\n\n  const handleResults = (e) => {\n    e.preventDefault();\n    // axios.post('url', config, body)\n  };\n\n  return (\n    <React.Fragment>\n      {showResults ? (\n        <div>hi </div>\n      ) : (\n        <div className='my-results-prompt'>\n          <h1 className='who-is-my-bff'>Who is my BFF?</h1>\n          <form onSubmit={handleResults}>\n            <div className='results-input d-flex flex-column'>\n              <input\n                type='text'\n                className='code-input'\n                placeholder='Room code'\n                value={roomCode}\n              ></input>\n              <input\n                type='text'\n                className='pin-input'\n                placeholder='Pin'\n                value={pin}\n              ></input>\n              <br />\n              <button type='submit' className='btn btn-blue'>\n                Let's find out!\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default MyResults;\n",["85","86"],"/Users/tiffanyyelle/src/Project3/client/src/components/Results/myresults.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Navbar/navbar.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":171,"column":1,"nodeType":"93","messageId":"94","endLine":183,"endColumn":2},{"ruleId":"95","severity":1,"message":"96","line":7,"column":7,"nodeType":"97","messageId":"98","endLine":7,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":40,"column":6,"nodeType":"101","endLine":40,"endColumn":19,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":115,"column":6,"nodeType":"101","endLine":115,"endColumn":8,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":119,"column":16,"nodeType":"107","messageId":"108","endLine":119,"endColumn":18},{"ruleId":"95","severity":1,"message":"109","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":13},{"ruleId":"95","severity":1,"message":"110","line":5,"column":20,"nodeType":"97","messageId":"98","endLine":5,"endColumn":31},{"ruleId":"95","severity":1,"message":"111","line":6,"column":15,"nodeType":"97","messageId":"98","endLine":6,"endColumn":21},{"ruleId":"95","severity":1,"message":"112","line":7,"column":23,"nodeType":"97","messageId":"98","endLine":7,"endColumn":37},{"ruleId":"87","replacedBy":"113"},{"ruleId":"89","replacedBy":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'ansOptionlength' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'match.params.quizId', 'name', 'quizOwner', and 'score'. Either include them or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has missing dependencies: 'id' and 'numToLetter'. Either include them or remove the dependency array. If 'setLetterChoice' needs the current value of 'id', you can also switch to useReducer instead of useState and read 'id' in the reducer.",["118"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'setRoomCode' is assigned a value but never used.","'setPin' is assigned a value but never used.","'setShowResults' is assigned a value but never used.",["115"],["116"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [history, match.params.quizId, name, quizOwner, score, showResults]",{"range":"123","text":"124"},"Update the dependencies array to be: [id, numToLetter]",{"range":"125","text":"126"},[1141,1154],"[history, match.params.quizId, name, quizOwner, score, showResults]",[3463,3465],"[id, numToLetter]"]
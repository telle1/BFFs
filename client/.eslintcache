[{"/Users/tiffanyyelle/src/Project3/client/src/index.js":"1","/Users/tiffanyyelle/src/Project3/client/src/reportWebVitals.js":"2","/Users/tiffanyyelle/src/Project3/client/src/App.js":"3","/Users/tiffanyyelle/src/Project3/client/src/components/Hero/hero.js":"4","/Users/tiffanyyelle/src/Project3/client/src/components/Invite/invite.js":"5","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/allcards.js":"6","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/card.js":"7","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/question.js":"8","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/questionDropdown.js":"9","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/ansOption.js":"10","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/addAns.js":"11","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerCards.js":"12","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerName.js":"13","/Users/tiffanyyelle/src/Project3/client/src/components/Results/results.js":"14","/Users/tiffanyyelle/src/Project3/client/src/components/Results/myResults.js":"15","/Users/tiffanyyelle/src/Project3/client/src/components/Results/myresults.js":"16","/Users/tiffanyyelle/src/Project3/client/src/components/Navbar/navbar.js":"17"},{"size":500,"mtime":1607375890745,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1607375890747,"results":"20","hashOfConfig":"19"},{"size":9755,"mtime":1607933295363,"results":"21","hashOfConfig":"19"},{"size":1292,"mtime":1607933127237,"results":"22","hashOfConfig":"19"},{"size":1104,"mtime":1607915857502,"results":"23","hashOfConfig":"19"},{"size":7874,"mtime":1607913707410,"results":"24","hashOfConfig":"19"},{"size":8207,"mtime":1607934598176,"results":"25","hashOfConfig":"19"},{"size":819,"mtime":1607893070094,"results":"26","hashOfConfig":"19"},{"size":1490,"mtime":1607893467056,"results":"27","hashOfConfig":"19"},{"size":6493,"mtime":1607911246190,"results":"28","hashOfConfig":"19"},{"size":736,"mtime":1607909402719,"results":"29","hashOfConfig":"19"},{"size":4718,"mtime":1607919314170,"results":"30","hashOfConfig":"19"},{"size":2029,"mtime":1607891849986,"results":"31","hashOfConfig":"19"},{"size":2007,"mtime":1607932563803,"results":"32","hashOfConfig":"19"},{"size":1276,"mtime":1607746585759,"results":"33","hashOfConfig":"19"},{"size":3384,"mtime":1607932708998,"results":"34","hashOfConfig":"19"},{"size":529,"mtime":1607934364496,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"2kkxo5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tiffanyyelle/src/Project3/client/src/index.js",[],["77","78"],"/Users/tiffanyyelle/src/Project3/client/src/reportWebVitals.js",[],"/Users/tiffanyyelle/src/Project3/client/src/App.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Hero/hero.js",["79"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Navbar from '../../components/Navbar/navbar.js'\n\nimport './hero.css';\n\nfunction Hero() {\n  const history = useHistory();\n  const [name, setName] = useState('');\n\n  return (\n    <div className='hero'>\n      <h1 className='hero-header'>BFFs</h1>\n      <br />\n      <h2 className='hero-description mt-n4'>\n        The ultimate friendship quiz to test how well your friends know you!\n      </h2>\n\n      <div className='user-options d-flex flex-column'>\n        <div className='d-flex'>\n          <input\n            type='text'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            className='enter-name'\n            placeholder='Enter name'\n          ></input>\n          <button\n            className='btn pink-button'\n            onClick={() => history.push({pathname: '/create-quiz', state: {name: name}})}\n          >\n            Create\n          </button>\n        </div>\n\n        <h2 className='or align-self-center mt-2'>OR</h2>\n        <button\n          className='btn pink-button mt-2 d-block'\n          onClick={() => history.push('/view-results')}\n        >\n          View my results\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Hero;\n","/Users/tiffanyyelle/src/Project3/client/src/components/Invite/invite.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/allcards.js",["80"],"import { Form } from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Card from './card.js';\nimport axios from 'axios';\n\nconst premadeCards = {\n  1: {\n    number: 1,\n    bgColor: '#FF9AA2',\n    question: 'Why do I...?',\n    correctAnswer: '',\n    ansOptions: { 1: 'a', 2: 'b', 3: 'c', 4: 'd' },\n  },\n  2: {\n    number: 2,\n    bgColor: '#FFB7B2',\n    question: 'Where was my best vacation?',\n    correctAnswer: '',\n    ansOptions: { 1: 'e', 2: 'f', 3: 'g', 4: 'h' },\n  },\n  3: {\n    number: 3,\n    bgColor: '#FFB347',\n    question: 'What was the name of my favorite stuffed animal?',\n    correctAnswer: '',\n    ansOptions: { 1: 'i', 2: 'j', 3: 'k', 4: 'l' },\n  },\n  4: {\n    number: 4,\n    bgColor: '#FFDAC1',\n    question: 'Where was my childhood home?',\n    correctAnswer: '',\n    ansOptions: { 1: 'a', 2: 'b', 3: 'c', 4: 'd' },\n  },\n  5: {\n    number: 5,\n    bgColor: '#B5EAD7',\n    question: 'What is my favorite color',\n    correctAnswer: '',\n    ansOptions: { 1: 'e', 2: 'f', 3: 'g', 4: 'h' },\n  },\n  6: {\n    number: 6,\n    bgColor: '#E2F0CB',\n    question: 'What sport do I like watching the best?',\n    correctAnswer: '',\n    ansOptions: { 1: 'i', 2: 'j', 3: 'k', 4: 'l' },\n  },\n  7: {\n    number: 7,\n    bgColor: '#85E3FF',\n    question: 'What is my middle name?',\n    correctAnswer: '',\n    ansOptions: { 1: 'a', 2: 'b', 3: 'c', 4: 'd' },\n  },\n  8: {\n    number: 8,\n    bgColor: '#ACE7FF',\n    question: 'What is my favorite drink?',\n    correctAnswer: '',\n    ansOptions: { 1: 'e', 2: 'f', 3: 'g', 4: 'h' },\n  },\n  9: {\n    number: 9,\n    bgColor: '#B28DFF',\n    question: 'What was my craziest night?',\n    correctAnswer: '',\n    ansOptions: { 1: 'i', 2: 'j', 3: 'k', 4: 'l' },\n  },\n  10: {\n    number: 10,\n    bgColor: '#97A2FF',\n    question: 'What is my favorite subject?',\n    correctAnswer: '',\n    ansOptions: { 1: 'a', 2: 'b', 3: 'c', 4: 'd' },\n  },\n};\n\nfunction AllCards() {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [name, setName] = useState('');\n  const [error, setError] = useState('');\n  const [quizInfo, setQuizInfo] = useState(premadeCards);\n\n  useEffect(() => {\n    setName(location.state.name);\n  }, [location]);\n\n  console.log('HERES ALL THE QUIZ INFO', quizInfo);\n\n  const handleQuestionSubmit = async (e) => {\n    e.preventDefault();\n    console.log('QUIZ INFOOOOOO', quizInfo);\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const body = JSON.stringify({ quizInfo: quizInfo, userName: name });\n      const res = await axios.post('/api/invite', body, config);\n\n      history.push({\n        pathname: '/invite',\n        state: { roomCode: res.data.roomCode, pin: res.data.pin },\n      });\n\n    } catch (err) {\n      if (err.response) {\n        setError(err.response.data);\n      } \n    }\n  };\n\n  return (\n    <Form onSubmit={handleQuestionSubmit} className='mt-5 mb-5'>\n      <h1 className='d-flex justify-content-center mb-3 quiz-header'>\n        Ask away, {name}!{' '}\n      </h1>\n      {Object.keys(quizInfo).map((cardNum, i) => (\n        <Card\n          key={cardNum}\n          cardNumber={cardNum}\n          cardColor={premadeCards[cardNum].bgColor}\n          defaultQ={premadeCards[cardNum].question}\n          defaultA={premadeCards[cardNum].ansOptions}\n          quizInfo={quizInfo}\n          setQuizInfo={setQuizInfo}\n        ></Card>\n      ))}\n \n      <div className=\"text-center\">\n        <button type='submit' className='btn btn-secondary'>\n          Create my quiz!\n        </button>\n        <p className=\"text-danger mt-3\">{error}</p>\n      </div>\n\n    </Form>\n  );\n}\n\nexport default AllCards;\n\n{\n  /* {premadeCards.map((card, i) => (\n        <Card\n          key={premadeCards[i].number}\n          questionNumber={i + 1}\n          cardColor={premadeCards[i].bgColor}\n          defaultQ={premadeCards[i].question}\n          defaultA={premadeCards[i].ansOptions}\n          quizInfo={quizInfo}\n          setQuizInfo={setQuizInfo}\n        ></Card>\n      ))} */\n}\n\n// const premadeCards = {\n//   1: { number: 1, bgColor: \"#FF9AA2\", question: 'Why do I...?', correctAnswer: \"\", ansOptions: ['a', 'b', 'c', 'd'] },\n//   2: { number: 2, bgColor: \"#FFB7B2\", question: 'Where was my best vacation?', correctAnswer: \"\", ansOptions: ['e', 'f', 'g', 'h'] },\n//   3: { number: 3, bgColor: \"#FFB347\", question: 'What was the name of my favorite stuffed animal?', correctAnswer: \"\", ansOptions: ['i', 'j', 'k', 'l'] },\n//   4: { number: 4, bgColor: \"#FFDAC1\", question: 'Where was my childhood home?', correctAnswer: \"\", ansOptions: ['m', 'n', 'o', 'p'] },\n//   5: { number: 5, bgColor: \"#B5EAD7\", question: 'What is my favorite color', correctAnswer: \"\", ansOptions: ['m', 'n', 'o', 'p'] },\n//   6: { number: 6, bgColor: \"#E2F0CB\", question: 'What sport do I like watching the best?', correctAnswer: \"\", ansOptions: ['m', 'n', 'o', 'p'] },\n//   7: { number: 7, bgColor: \"#85E3FF\", question: 'What is my middle name?', correctAnswer: \"\", ansOptions: ['m', 'n', 'o', 'p'] },\n//   8: { number: 8, bgColor: \"#ACE7FF\", question: 'What is my favorite drink?', correctAnswer: \"\", ansOptions: ['m', 'n', 'o', 'p'] },\n//   9: { number: 9, bgColor: \"#B28DFF\", question: 'What was my craziest night?', correctAnswer: \"\", ansOptions: ['m', 'n', 'o', 'p'] },\n//   10: { number: 10, bgColor: \"#97A2FF\", question: 'What is my favorite subject?', correctAnswer: \"\", ansOptions: ['History', 'Computer Science', 'English', 'Biology'] },\n// };\n\n// let questions = {\n//   1: {question: 'Why do I...?', answer: ['a', 'b', 'c', 'd'] },\n//   2: {question: 'Where was my best vacation?', answer: ['e', 'f', 'g', 'h'] },\n//   3: {question: 'What was the name of my favorite stuffed animal?', answer: ['i', 'j', 'k', 'l'] },\n//   4: { question: 'Where was my childhood home?', answer: ['m', 'n', 'o', 'p'] },\n//   5: { question: 'What is my favorite color', answer: ['m', 'n', 'o', 'p'] },\n//   6: { question: 'What sport do I like watching the best?', answer: ['m', 'n', 'o', 'p'] },\n//   7: { question: 'What is my middle name?', answer: ['m', 'n', 'o', 'p'] },\n//   8: { question: 'What is my favorite drink?', answer: ['m', 'n', 'o', 'p'] },\n//   9: { question: 'What was my craziest night?', answer: ['m', 'n', 'o', 'p'] },\n//   10: { question: 'What is my favorite subject?', answer: ['History', 'Computer Science', 'English', 'Biology'] }\n// }\n\n// const premadeCards = [\n//   { number: 1, bgColor: \"#FF9AA2\", question: 'Why do I...?', correctAnswer: \"\", ansOptions: ['a', 'b', 'c', 'd'] },\n//   { number: 2, bgColor: \"#FFB7B2\", question: 'Where was my best vacation?', correctAnswer: \"\", ansOptions: ['e', 'f', 'g', 'h'] },\n//   { number: 3, bgColor: \"#FFB347\", question: 'What was the name of my favorite stuffed animal?', correctAnswer: \"\", ansOptions: ['i', 'j', 'k', 'l'] },\n//   { number: 4, bgColor: \"#FFDAC1\", question: 'Where was my childhood home?', correctAnswer: \"\", ansOptions: ['m', 'n', 'o', 'p'] },\n//   { number: 5, bgColor: \"#B5EAD7\", question: 'What is my favorite color', correctAnswer: \"\", ansOptions: ['m', 'n', 'o', 'p'] },\n//   { number: 6, bgColor: \"#E2F0CB\", question: 'What sport do I like watching the best?', correctAnswer: \"\", ansOptions: ['m', 'n', 'o', 'p'] },\n//   { number: 7, bgColor: \"#85E3FF\", question: 'What is my middle name?', correctAnswer: \"\", ansOptions: ['m', 'n', 'o', 'p'] },\n//   { number: 8, bgColor: \"#ACE7FF\", question: 'What is my favorite drink?', correctAnswer: \"\", ansOptions: ['m', 'n', 'o', 'p'] },\n//   { number: 9, bgColor: \"#B28DFF\", question: 'What was my craziest night?', correctAnswer: \"\", ansOptions: ['m', 'n', 'o', 'p'] },\n//   { number: 10, bgColor: \"#97A2FF\", question: 'What is my favorite subject?', correctAnswer: \"\", ansOptions: ['History', 'Computer Science', 'English', 'Biology'] },\n// ];\n","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/card.js",["81"],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/question.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/questionDropdown.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/ansOption.js",["82","83"],"import React, { useEffect, useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport './ansOption.css';\n\nfunction AnsOption({\n  ansNum,\n  ansChoice,\n  setAnsOptions,\n  ansOptions,\n  cardNumber,\n  setQuizInfo,\n  quizInfo,\n  correctAnswer,\n  setCorrectAnswer,\n}) {\n  const rmvAnswer = (e) => {\n    e.preventDefault();\n\n    console.log('wjats in ansoptions', ansOptions);\n\n    let ansOptionTemp = { ...ansOptions };\n    delete ansOptionTemp[ansNum];\n    setAnsOptions(ansOptionTemp);\n\n    setQuizInfo({\n      ...quizInfo,\n      [cardNumber]: {\n        ...quizInfo[cardNumber],\n        ansOptions: ansOptionTemp,\n      },\n    });\n  };\n\n  return (\n    <Form>\n      <div className='answer-choice d-flex justify-content-center align-items-center'>\n        <input \n          type='radio'\n          id={ansNum}\n          name='answer_options'\n          value={ansChoice}\n          className='mr-1'\n          onChange={() => {\n            setCorrectAnswer(ansNum);\n            setQuizInfo({\n              ...quizInfo,\n              [cardNumber]: { ...quizInfo[cardNumber], correctAnswer: ansNum },\n            });\n          }}\n          required/>\n        <label htmlFor='answer-option' className='my-0 mr-2'>\n          <textarea\n            rows='2'\n            className='answer-option'\n            value={ansChoice}\n            onChange={(e) => {\n              e.preventDefault();\n\n              setAnsOptions({ ...ansOptions, [ansNum]: e.target.value });\n\n              setQuizInfo({\n                ...quizInfo,\n                [cardNumber]: {\n                  ...quizInfo[cardNumber],\n                  ansOptions: { ...ansOptions, [ansNum]: e.target.value },\n                },\n              });\n            }}\n          ></textarea>\n        </label>\n\n        <button className='btn' onClick={rmvAnswer}>\n          <i className='fas fa-times' style={{ color: 'white' }}></i>\n        </button>\n      </div>\n    </Form>\n  );\n}\n\nexport default AnsOption;\n\n// function AnsOption({\n//   ansNum,\n//   ansChoice,\n//   setAnsOptions,\n//   ansOptions,\n//   setQuizInfo,\n//   quizInfo,\n//   cardNumber,\n// }) {\n//   const [correctAnswer, setCorrectAnswer] = useState('');\n\n//   const rmvAnswer = (e) => {\n//     e.preventDefault();\n//     const newAnsOptions = ansOptions.filter((ans, i) => i !== ansNum - 1);\n//     setAnsOptions(newAnsOptions);\n\n//     setQuizInfo({\n//       ...quizInfo,\n//       [cardNumber]: {\n//         ...quizInfo[cardNumber],\n//         ansOptions: newAnsOptions,\n//       },\n//     });\n//   };\n\n//   return (\n//     <div className='answer-choice d-flex justify-content-center align-items-center'>\n//       <input\n//         type='radio'\n//         id={ansNum}\n//         name='answer_options'\n//         value={ansChoice}\n//         className='mr-1'\n//         onClick={() => {\n//           setCorrectAnswer(ansNum);\n//           setQuizInfo({\n//             ...quizInfo,\n//             [cardNumber]: { ...quizInfo[cardNumber], correctAnswer: ansNum },\n//           });\n//         }}\n//         required\n//       />\n//       <label htmlFor='answer-option' className='my-0 mr-2'>\n//         <textarea\n//           rows='2'\n//           className='answer-option'\n//           value={ansChoice}\n//           onChange={(e) => {\n\n//             const filterAns = ansOptions.filter((ans, i) => i+1 != ansNum);\n//             console.log(filterAns,' whats il infilter ans') //b,c,d\n\n//             let changeAns = ansOptions.map((ans, i) => {\n//               if (i + 1 == ansNum) {\n//                 return [e.target.value];\n//               } else {\n//                 return [...ans];\n//               }\n//             });\n\n//             // setAnsOptions([...ansOptions, e.target.value]);\n//             setAnsOptions([changeAns])\n\n//             // setQuizInfo({\n//             //   ...quizInfo,\n//             //   [cardNumber]: {\n//             //     ...quizInfo[cardNumber],\n//             //     ansOptions: [...ansOptions, e.target.value],\n//             //   },\n//             // });\n//           }}\n//         ></textarea>\n//       </label>\n\n//       <button className='btn' onClick={rmvAnswer}>\n//         <i className='fas fa-times' style={{ color: 'white' }}></i>\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default AnsOption;\n\n// function AnsOption({\n//   optionNum,\n//   ansOption,\n//   setAnsOptions,\n//   ansOptions,\n//   cardNumber,\n//   setCorrectAnswer,\n//   setQuizInfo,\n//   quizInfo,\n//   correctAnswer,\n// }) {\n//   const [ansText, setAnsText] = useState();\n\n//   useEffect(() => {\n//     setAnsText(ansOption);\n//   }, [ansOption]);\n\n//   const rmvAnswer = (e) => {\n//     e.preventDefault();\n//     const newAnsOptions = ansOptions.filter((ans, i) => i !== optionNum);\n//     setAnsOptions(newAnsOptions);\n\n//     setQuizInfo({\n//       ...quizInfo,\n//       [cardNumber]: {\n//         ...quizInfo[cardNumber],\n//         ansOptions: newAnsOptions\n//       },\n//     });\n\n//   };\n\n//   return (\n//     <div className='answer-choice d-flex justify-content-center align-items-center'>\n//       <input\n//         type='radio'\n//         id={optionNum}\n//         name='answer_options'\n//         value={ansText}\n//         className='mr-1'\n//         onClick={() => {\n//           setCorrectAnswer(optionNum);\n//           setQuizInfo({\n//             ...quizInfo,\n//             [cardNumber]: { ...quizInfo[cardNumber], correctAnswer: optionNum },\n//           });\n//         }}\n//         required\n//       />\n//       <label htmlFor='answer-option' className='my-0 mr-2'>\n//         <textarea\n//           rows='2'\n//           className='answer-option'\n//           value={ansText}\n//           onChange={(e) => {\n//             setAnsText(e.target.value);\n\n//             setQuizInfo({\n//               ...quizInfo,\n//               [cardNumber]: {\n//                 ...quizInfo[cardNumber],\n//                 ansOptions: [...ansOptions, e.target.value]\n//               },\n//             });\n\n//           }}\n//         ></textarea>\n//       </label>\n\n//       <button className='btn' onClick={rmvAnswer}>\n//         <i className='fas fa-times' style={{ color: 'white' }}></i>\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default AnsOption;\n\n// let updatedAnsOptions = ansOptions.map((ansOption, i) => {\n//   if (i == id) {\n//     console.log('WHTS IN ANS OPTION', ansOption);\n//     return (ansOption = e.target.value);\n//   } else {\n//     return ansOption;\n//   }\n// });\n// setAnsOptions(updatedAnsOptions);\n","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/addAns.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerCards.js",["84","85","86"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col } from 'react-bootstrap';\nimport './quizTakerCards.css';\nimport axios from 'axios';\n\nfunction QuizTakerCards({ name, match, quizCards, quizOwner }) {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [showAns, setShowAns] = useState()\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (showResults) {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const body = JSON.stringify({\n        name: name,\n        score: score,\n      });\n\n      axios\n        .post(`/api/results/${match.params.quizId}`, body, config) // change to paramsId\n        .then((res) => {\n          history.push({\n            pathname: `/results/${match.params.quizId}`,\n            state: {\n              allResults: res.data.allResults,\n              friendScore: score,\n              quizOwner: quizOwner,\n            },\n          });\n        });\n    }\n  }, [showResults]); //so that score is not one state behind\n\n  return (\n    <div className='show-cards'>\n      <h1 className='how-well-header mt-3'>\n        How well do you know {quizOwner}, {name}?\n      </h1>\n      <Row key={quizCards.questionNumber} className='mb-5 mt-4'>\n        <Col>\n          <div\n            className='card card-left'\n            style={{ backgroundColor: quizCards[currentQuestion].bgColor }}\n          >\n            <div className='card-content'>\n              <h2 className='font-weight-bold'>\n                QUESTION {quizCards[currentQuestion].number}\n              </h2>\n              {/* Question */}\n              <h4 className='question mb-2'>\n                {quizCards[currentQuestion].question}\n              </h4>\n\n              <div>\n                {/* Answer Options */}\n                {quizCards[currentQuestion].answerOptions.map(\n                  (ansOption, i) => (\n                    <AnsOption\n                      key={i}\n                      id={i}\n                      ansOption={ansOption}\n                      currentQuestion={currentQuestion}\n                      setCurrentQuestion={setCurrentQuestion}\n                      quizCards={quizCards}\n                      setScore={setScore}\n                      setShowResults={setShowResults} setShowAns={setShowAns}\n                    />\n                  )\n                )}\n              </div>\n              <div className=\"text-danger\">\n                <h2>  {showAns}</h2>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction AnsOption({\n  ansOption,\n  id,\n  currentQuestion,\n  setCurrentQuestion,\n  quizCards,\n  setScore,\n  setShowResults, setShowAns\n}) {\n  const [btnColor, setBtnColor] = useState('white');\n  const [letterChoice, setLetterChoice] = useState('');\n  const [letterBgCol, setLetterBgCol] = useState('');\n\n  let numToLetter = {\n    0: { letter: 'A', bgColor: '#FFB7B2' },\n    1: { letter: 'B', bgColor: '#FFDAC1' },\n    2: { letter: 'C', bgColor: '#F8F9CA' },\n    3: { letter: 'D', bgColor: '#B5EAD7' },\n    4: { letter: 'E', bgColor: '#C7CEEA' },\n    5: { letter: 'F', bgColor: '#FF9AA2' },\n  };\n\n  useEffect(() => {\n    setLetterChoice(numToLetter[String(id)].letter);\n    setLetterBgCol(numToLetter[String(id)].bgColor);\n  }, []);\n\n  const changeQuestion = () => {\n    const nextQuestion = currentQuestion + 1;\n    if (id + 1 == quizCards[currentQuestion].correctAnswer) {\n      setScore((score) => score + 1);\n      setBtnColor('#90ee90');\n    } else {\n      setBtnColor('#ff3232');\n      setShowAns(numToLetter[(quizCards[currentQuestion].correctAnswer)-1].letter)\n    }\n\n    setTimeout(() => {\n      setBtnColor('white');\n      setShowAns('')\n      if (nextQuestion < quizCards.length) {\n        setCurrentQuestion(currentQuestion + 1);\n      } else {\n        setShowResults(true);\n      }\n    }, 1000);\n  };\n\n  return (\n    <div className='div-answer-choice py-3'>\n      <button\n        onClick={() => changeQuestion()}\n        style={{ backgroundColor: btnColor }}\n        className='btn btn-answer-choice py-0 px-0'\n      >\n        <Row>\n          <Col xs={2}>\n            <div\n              className='letter-choice d-flex justify-content-center align-items-center'\n              style={{ backgroundColor: letterBgCol }}\n            >\n              {letterChoice}\n            </div>\n          </Col>\n          <Col xs={10} className='btn-column py-2'>\n            {ansOption}\n          </Col>\n        </Row>\n      </button>\n    </div>\n  );\n}\n\nexport default QuizTakerCards;\n","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerName.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Results/results.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Results/myResults.js",["87","88","89","90"],"import './myresults.css';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nfunction MyResults() {\n  const [roomCode, setRoomCode] = useState('');\n  const [pin, setPin] = useState('');\n  const [showResults, setShowResults] = useState(false);\n\n  const handleResults = (e) => {\n    e.preventDefault();\n    // axios.post('url', config, body)\n  };\n\n  return (\n    <React.Fragment>\n      {showResults ? (\n        <div>hi </div>\n      ) : (\n        <div className='my-results-prompt'>\n          <h1 className='who-is-my-bff'>Who is my BFF?</h1>\n          <form onSubmit={handleResults}>\n            <div className='results-input d-flex flex-column'>\n              <input\n                type='text'\n                className='code-input'\n                placeholder='Room code'\n                value={roomCode}\n              ></input>\n              <input\n                type='text'\n                className='pin-input'\n                placeholder='Pin'\n                value={pin}\n              ></input>\n              <br />\n              <button type='submit' className='btn btn-blue'>\n                Let's find out!\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default MyResults;\n",["91","92"],"/Users/tiffanyyelle/src/Project3/client/src/components/Results/myresults.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Navbar/navbar.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":148,"column":1,"nodeType":"103","messageId":"104","endLine":160,"endColumn":2},{"ruleId":"97","severity":1,"message":"105","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"105","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"106","line":1,"column":28,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"108","line":40,"column":6,"nodeType":"109","endLine":40,"endColumn":19,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"111","line":115,"column":6,"nodeType":"109","endLine":115,"endColumn":8,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":119,"column":16,"nodeType":"115","messageId":"116","endLine":119,"endColumn":18},{"ruleId":"97","severity":1,"message":"117","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"118","line":5,"column":20,"nodeType":"99","messageId":"100","endLine":5,"endColumn":31},{"ruleId":"97","severity":1,"message":"119","line":6,"column":15,"nodeType":"99","messageId":"100","endLine":6,"endColumn":21},{"ruleId":"97","severity":1,"message":"120","line":7,"column":23,"nodeType":"99","messageId":"100","endLine":7,"endColumn":37},{"ruleId":"93","replacedBy":"121"},{"ruleId":"95","replacedBy":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useEffect' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'match.params.quizId', 'name', 'quizOwner', and 'score'. Either include them or remove the dependency array.","ArrayExpression",["125"],"React Hook useEffect has missing dependencies: 'id' and 'numToLetter'. Either include them or remove the dependency array. If 'setLetterChoice' needs the current value of 'id', you can also switch to useReducer instead of useState and read 'id' in the reducer.",["126"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'setRoomCode' is assigned a value but never used.","'setPin' is assigned a value but never used.","'setShowResults' is assigned a value but never used.",["123"],["124"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [history, match.params.quizId, name, quizOwner, score, showResults]",{"range":"131","text":"132"},"Update the dependencies array to be: [id, numToLetter]",{"range":"133","text":"134"},[1141,1154],"[history, match.params.quizId, name, quizOwner, score, showResults]",[3463,3465],"[id, numToLetter]"]
[{"/Users/tiffanyyelle/src/Project3/client/src/index.js":"1","/Users/tiffanyyelle/src/Project3/client/src/reportWebVitals.js":"2","/Users/tiffanyyelle/src/Project3/client/src/App.js":"3","/Users/tiffanyyelle/src/Project3/client/src/components/Hero/hero.js":"4","/Users/tiffanyyelle/src/Project3/client/src/components/Invite/invite.js":"5","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/allcards.js":"6","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/card.js":"7","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/question.js":"8","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/questionDropdown.js":"9","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/ansOption.js":"10","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/addAns.js":"11","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerCards.js":"12","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerName.js":"13","/Users/tiffanyyelle/src/Project3/client/src/components/Results/results.js":"14","/Users/tiffanyyelle/src/Project3/client/src/components/Results/myResults.js":"15","/Users/tiffanyyelle/src/Project3/client/src/components/Results/myresults.js":"16","/Users/tiffanyyelle/src/Project3/client/src/components/Navbar/navbar.js":"17"},{"size":500,"mtime":1607375890745,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1607375890747,"results":"20","hashOfConfig":"19"},{"size":9755,"mtime":1607933295363,"results":"21","hashOfConfig":"19"},{"size":1236,"mtime":1607998949848,"results":"22","hashOfConfig":"19"},{"size":1104,"mtime":1607915857502,"results":"23","hashOfConfig":"19"},{"size":8403,"mtime":1608000225045,"results":"24","hashOfConfig":"19"},{"size":2965,"mtime":1608001907719,"results":"25","hashOfConfig":"19"},{"size":765,"mtime":1607997805774,"results":"26","hashOfConfig":"19"},{"size":1454,"mtime":1607997959269,"results":"27","hashOfConfig":"19"},{"size":1663,"mtime":1608000402465,"results":"28","hashOfConfig":"19"},{"size":665,"mtime":1608001356187,"results":"29","hashOfConfig":"19"},{"size":4740,"mtime":1608001247863,"results":"30","hashOfConfig":"19"},{"size":2029,"mtime":1607891849986,"results":"31","hashOfConfig":"19"},{"size":2007,"mtime":1607932563803,"results":"32","hashOfConfig":"19"},{"size":1276,"mtime":1607746585759,"results":"33","hashOfConfig":"19"},{"size":3384,"mtime":1607932708998,"results":"34","hashOfConfig":"19"},{"size":529,"mtime":1607934364496,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"2kkxo5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/tiffanyyelle/src/Project3/client/src/index.js",[],["73","74"],"/Users/tiffanyyelle/src/Project3/client/src/reportWebVitals.js",[],"/Users/tiffanyyelle/src/Project3/client/src/App.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Hero/hero.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Invite/invite.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/allcards.js",["75"],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/card.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/question.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/questionDropdown.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/ansOption.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/addAns.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerCards.js",["76","77","78"],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerName.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Results/results.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Results/myResults.js",["79","80","81","82"],"import './myresults.css';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nfunction MyResults() {\n  const [roomCode, setRoomCode] = useState('');\n  const [pin, setPin] = useState('');\n  const [showResults, setShowResults] = useState(false);\n\n  const handleResults = (e) => {\n    e.preventDefault();\n    // axios.post('url', config, body)\n  };\n\n  return (\n    <React.Fragment>\n      {showResults ? (\n        <div>hi </div>\n      ) : (\n        <div className='my-results-prompt'>\n          <h1 className='who-is-my-bff'>Who is my BFF?</h1>\n          <form onSubmit={handleResults}>\n            <div className='results-input d-flex flex-column'>\n              <input\n                type='text'\n                className='code-input'\n                placeholder='Room code'\n                value={roomCode}\n              ></input>\n              <input\n                type='text'\n                className='pin-input'\n                placeholder='Pin'\n                value={pin}\n              ></input>\n              <br />\n              <button type='submit' className='btn btn-blue'>\n                Let's find out!\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default MyResults;\n",["83","84"],"/Users/tiffanyyelle/src/Project3/client/src/components/Results/myresults.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Navbar/navbar.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":172,"column":1,"nodeType":"91","messageId":"92","endLine":184,"endColumn":2},{"ruleId":"93","severity":1,"message":"94","line":40,"column":6,"nodeType":"95","endLine":40,"endColumn":19,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":116,"column":6,"nodeType":"95","endLine":116,"endColumn":8,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":120,"column":13,"nodeType":"101","messageId":"102","endLine":120,"endColumn":15},{"ruleId":"103","severity":1,"message":"104","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},{"ruleId":"103","severity":1,"message":"107","line":5,"column":20,"nodeType":"105","messageId":"106","endLine":5,"endColumn":31},{"ruleId":"103","severity":1,"message":"108","line":6,"column":15,"nodeType":"105","messageId":"106","endLine":6,"endColumn":21},{"ruleId":"103","severity":1,"message":"109","line":7,"column":23,"nodeType":"105","messageId":"106","endLine":7,"endColumn":37},{"ruleId":"85","replacedBy":"110"},{"ruleId":"87","replacedBy":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'match.params.quizId', 'name', 'quizOwner', and 'score'. Either include them or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has missing dependencies: 'idx' and 'numToLetter'. Either include them or remove the dependency array. If 'setLetterChoice' needs the current value of 'idx', you can also switch to useReducer instead of useState and read 'idx' in the reducer.",["115"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'setRoomCode' is assigned a value but never used.","'setPin' is assigned a value but never used.","'setShowResults' is assigned a value but never used.",["112"],["113"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [history, match.params.quizId, name, quizOwner, score, showResults]",{"range":"120","text":"121"},"Update the dependencies array to be: [idx, numToLetter]",{"range":"122","text":"123"},[1142,1155],"[history, match.params.quizId, name, quizOwner, score, showResults]",[3497,3499],"[idx, numToLetter]"]
[{"/Users/tiffanyyelle/src/Project3/client/src/index.js":"1","/Users/tiffanyyelle/src/Project3/client/src/reportWebVitals.js":"2","/Users/tiffanyyelle/src/Project3/client/src/App.js":"3","/Users/tiffanyyelle/src/Project3/client/src/components/Hero/hero.js":"4","/Users/tiffanyyelle/src/Project3/client/src/components/Invite/invite.js":"5","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/allcards.js":"6","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/card.js":"7","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/question.js":"8","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/questionDropdown.js":"9","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/ansOption.js":"10","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/addAns.js":"11","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerCards.js":"12","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerName.js":"13","/Users/tiffanyyelle/src/Project3/client/src/components/Results/results.js":"14","/Users/tiffanyyelle/src/Project3/client/src/components/Results/myResults.js":"15","/Users/tiffanyyelle/src/Project3/client/src/components/Results/myresults.js":"16","/Users/tiffanyyelle/src/Project3/client/src/components/Navbar/navbar.js":"17","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/premadeCards.js":"18","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/QuizContext.js":"19","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/bgColor.js":"20"},{"size":500,"mtime":1607375890745,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1607375890747,"results":"23","hashOfConfig":"22"},{"size":1181,"mtime":1611010581889,"results":"24","hashOfConfig":"22"},{"size":1236,"mtime":1607998949848,"results":"25","hashOfConfig":"22"},{"size":1335,"mtime":1611011191116,"results":"26","hashOfConfig":"22"},{"size":1952,"mtime":1611011007032,"results":"27","hashOfConfig":"22"},{"size":2277,"mtime":1609965255938,"results":"28","hashOfConfig":"22"},{"size":803,"mtime":1609964823279,"results":"29","hashOfConfig":"22"},{"size":1232,"mtime":1609964842051,"results":"30","hashOfConfig":"22"},{"size":1338,"mtime":1609965177341,"results":"31","hashOfConfig":"22"},{"size":734,"mtime":1609965186781,"results":"32","hashOfConfig":"22"},{"size":4740,"mtime":1608001247863,"results":"33","hashOfConfig":"22"},{"size":2029,"mtime":1607891849986,"results":"34","hashOfConfig":"22"},{"size":2007,"mtime":1607932563803,"results":"35","hashOfConfig":"22"},{"size":1276,"mtime":1607746585759,"results":"36","hashOfConfig":"22"},{"size":3384,"mtime":1611010274871,"results":"37","hashOfConfig":"22"},{"size":529,"mtime":1607934364496,"results":"38","hashOfConfig":"22"},{"size":2134,"mtime":1611008833735,"results":"39","hashOfConfig":"22"},{"size":869,"mtime":1609965245886,"results":"40","hashOfConfig":"22"},{"size":394,"mtime":1609963883052,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"2kkxo5",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/tiffanyyelle/src/Project3/client/src/index.js",[],["89","90"],"/Users/tiffanyyelle/src/Project3/client/src/reportWebVitals.js",[],"/Users/tiffanyyelle/src/Project3/client/src/App.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Hero/hero.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Invite/invite.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/allcards.js",["91"],"import { Form } from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Card from './card.js';\nimport axios from 'axios';\n// import premadeCards from './premadeCards.js'\nimport { UseQuiz, SetQuiz } from './QuizContext';\n\nfunction AllCards() {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [name, setName] = useState('');\n  const [error, setError] = useState('');\n\n  const quizInfo = UseQuiz();\n\n  useEffect(() => {\n    setName(location.state.name);\n  }, [location]);\n\n  const handleQuestionSubmit = async (e) => {\n    e.preventDefault();\n    console.log('QUIZ INFOOOOOO', quizInfo);\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const body = JSON.stringify({ quizInfo: quizInfo, userName: name });\n      const res = await axios.post('/api/invite', body, config);\n\n      localStorage.setItem('roomCode', JSON.stringify(res.data.roomCode))\n      localStorage.setItem('pin', JSON.stringify(res.data.pin))\n\n      history.push({\n        pathname: '/invite',\n        state: { roomCode: res.data.roomCode, pin: res.data.pin },\n      });\n\n\n\n    } catch (err) {\n      if (err.response) {\n        setError(err.response.data);\n      }\n    }\n  };\n\n  console.log('HERES ALL THE QUIZ INFO', quizInfo);\n\n  return (\n    <Form onSubmit={handleQuestionSubmit} className='mt-5 mb-5'>\n      <h1 className='d-flex justify-content-center mb-3 quiz-header'>\n        Ask away, {name}!\n      </h1>\n      {Object.keys(quizInfo).map((cardNum) => (\n        <Card key={quizInfo[cardNum].number} cardNumber={cardNum}></Card>\n      ))}\n\n      <div className='text-center'>\n        <button type='submit' className='btn btn-secondary'>\n          Create my quiz!\n        </button>\n        <p className='text-danger mt-3'>{error}</p>\n      </div>\n    </Form>\n  );\n}\n\nexport default AllCards;\n\n","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/card.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/question.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/questionDropdown.js",[],["92","93"],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/ansOption.js",["94"],"import React from 'react';\nimport { UseQuiz, SetQuiz } from '../QuizContext';\nimport './ansOption.css';\n\nfunction AnsOption({ ansNum, ansChoice, ansOptions, cardNumber, idx }) {\n  const changeCardProp = SetQuiz();\n\n  const rmvAnswer = (e) => {\n    e.preventDefault();\n\n    let ansOptionTemp = { ...ansOptions };\n    delete ansOptionTemp[ansNum];\n\n    changeCardProp(cardNumber, 'ansOptions', ansOptionTemp);\n  };\n\n  return (\n    <div className='answer-choice d-flex justify-content-center align-items-center'>\n      <input\n        type='radio'\n        name='answer_options'\n        value={ansNum}\n        className='mr-1'\n        onChange={() => {\n          changeCardProp(cardNumber, 'correctAnswer', idx);\n        }}\n        required\n      />\n\n      <label htmlFor='answer-option' className='my-0 mr-2'>\n        <textarea\n          rows='2'\n          className='answer-option'\n          value={ansChoice}\n          onChange={(e) => {\n            e.preventDefault();\n            changeCardProp(cardNumber, 'ansOptions', {\n              ...ansOptions,\n              [ansNum]: e.target.value,\n            });\n          }}\n        ></textarea>\n      </label>\n\n      <button className='btn' onClick={rmvAnswer}>\n        <i className='fas fa-times' style={{ color: 'white' }}></i>\n      </button>\n    </div>\n  );\n}\n\nexport default AnsOption;\n","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/addAns.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerCards.js",["95","96","97"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col } from 'react-bootstrap';\nimport './quizTakerCards.css';\nimport axios from 'axios';\n\nfunction QuizTakerCards({ name, match, quizCards, quizOwner }) {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [showAns, setShowAns] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (showResults) {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const body = JSON.stringify({\n        name: name,\n        score: score,\n      });\n\n      axios\n        .post(`/api/results/${match.params.quizId}`, body, config) // change to paramsId\n        .then((res) => {\n          history.push({\n            pathname: `/results/${match.params.quizId}`,\n            state: {\n              allResults: res.data.allResults,\n              friendScore: score,\n              quizOwner: quizOwner,\n            },\n          });\n        });\n    }\n  }, [showResults]); //so that score is not one state behind\n\n  return (\n    <div className='show-cards'>\n      <h1 className='how-well-header mt-3'>\n        How well do you know {quizOwner}, {name}?\n      </h1>\n      <Row key={quizCards.questionNumber} className='mb-5 mt-4'>\n        <Col>\n          <div\n            className='card card-left'\n            style={{ backgroundColor: quizCards[currentQuestion].bgColor }}\n          >\n            <div className='card-content'>\n              <h2 className='font-weight-bold'>\n                QUESTION {quizCards[currentQuestion].number}\n              </h2>\n              {/* Question */}\n              <h4 className='question mb-2'>\n                {quizCards[currentQuestion].question}\n              </h4>\n              <div>\n                {/* Answer Options */}\n                {quizCards[currentQuestion].answerOptions.map(\n                  (ansOption, idx) => (\n                    <AnsOption\n                      key={idx}\n                      idx={idx}\n                      ansOption={ansOption}\n                      currentQuestion={currentQuestion}\n                      setCurrentQuestion={setCurrentQuestion}\n                      quizCards={quizCards}\n                      setScore={setScore}\n                      setShowResults={setShowResults}\n                      setShowAns={setShowAns}\n                    />\n                  )\n                )}\n              </div>\n              <div className='text-danger'>\n                <h2> {showAns}</h2>\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction AnsOption({\n  ansOption,\n  idx,\n  currentQuestion,\n  setCurrentQuestion,\n  quizCards,\n  setScore,\n  setShowResults,\n  setShowAns,\n}) {\n  const [btnColor, setBtnColor] = useState('white');\n  const [letterChoice, setLetterChoice] = useState('');\n  const [letterBgCol, setLetterBgCol] = useState('');\n\n  let numToLetter = {\n    0: { letter: 'A', bgColor: '#FFB7B2' },\n    1: { letter: 'B', bgColor: '#FFDAC1' },\n    2: { letter: 'C', bgColor: '#F8F9CA' },\n    3: { letter: 'D', bgColor: '#B5EAD7' },\n    4: { letter: 'E', bgColor: '#C7CEEA' },\n    5: { letter: 'F', bgColor: '#FF9AA2' },\n  };\n\n  useEffect(() => {\n    setLetterChoice(numToLetter[String(idx)].letter);\n    setLetterBgCol(numToLetter[String(idx)].bgColor);\n  }, []);\n\n  const changeQuestion = () => {\n    const nextQuestion = currentQuestion + 1;\n    if (idx == quizCards[currentQuestion].correctAnswer) {\n      setScore((score) => score + 1);\n      setBtnColor('#90ee90');\n    } else {\n      setBtnColor('#ff3232');\n      setShowAns(numToLetter[quizCards[currentQuestion].correctAnswer].letter);\n    }\n\n    setTimeout(() => {\n      setBtnColor('white');\n      setShowAns('');\n      if (nextQuestion < quizCards.length) {\n        setCurrentQuestion(nextQuestion);\n      } else {\n        setShowResults(true);\n      }\n    }, 1000);\n  };\n\n  return (\n    <div className='div-answer-choice py-3'>\n      <button\n        onClick={() => changeQuestion()}\n        style={{ backgroundColor: btnColor }}\n        className='btn btn-answer-choice py-0 px-0'\n      >\n        <Row>\n          <Col xs={2}>\n            <div\n              className='letter-choice d-flex justify-content-center align-items-center'\n              style={{ backgroundColor: letterBgCol }}\n            >\n              {letterChoice}\n            </div>\n          </Col>\n          <Col xs={10} className='btn-column py-2'>\n            {ansOption}\n          </Col>\n        </Row>\n      </button>\n    </div>\n  );\n}\n\nexport default QuizTakerCards;\n","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerName.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Results/results.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Results/myResults.js",["98","99","100","101"],"import './myresults.css';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nfunction MyResults() {\n  const [roomCode, setRoomCode] = useState('');\n  const [pin, setPin] = useState('');\n  const [showResults, setShowResults] = useState(false);\n\n  const handleResults = (e) => {\n    e.preventDefault();\n    // axios.post('url', config, body)\n  };\n\n  return (\n    <React.Fragment>\n      {showResults ? (\n        <div>hi </div>\n      ) : (\n        <div className='my-results-prompt'>\n          <h1 className='who-is-my-bff'>Who is my BFF?</h1>\n          <form onSubmit={handleResults}>\n            <div className='results-input d-flex flex-column'>\n              <input\n                type='text'\n                className='code-input'\n                placeholder='Room code'\n                value={roomCode}\n              ></input>\n              <input\n                type='text'\n                className='pin-input'\n                placeholder='Pin'\n                value={pin}\n              ></input>\n              <br />\n              <button type='submit' className='btn btn-blue'>\n                Let's find out!\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default MyResults;\n",["102","103"],"/Users/tiffanyyelle/src/Project3/client/src/components/Results/myresults.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Navbar/navbar.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/premadeCards.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/QuizContext.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/bgColor.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":7,"column":19,"nodeType":"110","messageId":"111","endLine":7,"endColumn":26},{"ruleId":"104","replacedBy":"112"},{"ruleId":"106","replacedBy":"113"},{"ruleId":"108","severity":1,"message":"114","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":17},{"ruleId":"115","severity":1,"message":"116","line":40,"column":6,"nodeType":"117","endLine":40,"endColumn":19,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"119","line":116,"column":6,"nodeType":"117","endLine":116,"endColumn":8,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":120,"column":13,"nodeType":"123","messageId":"124","endLine":120,"endColumn":15},{"ruleId":"108","severity":1,"message":"125","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":13},{"ruleId":"108","severity":1,"message":"126","line":5,"column":20,"nodeType":"110","messageId":"111","endLine":5,"endColumn":31},{"ruleId":"108","severity":1,"message":"127","line":6,"column":15,"nodeType":"110","messageId":"111","endLine":6,"endColumn":21},{"ruleId":"108","severity":1,"message":"128","line":7,"column":23,"nodeType":"110","messageId":"111","endLine":7,"endColumn":37},{"ruleId":"104","replacedBy":"129"},{"ruleId":"106","replacedBy":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'SetQuiz' is defined but never used.","Identifier","unusedVar",["131"],["132"],"'UseQuiz' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'match.params.quizId', 'name', 'quizOwner', and 'score'. Either include them or remove the dependency array.","ArrayExpression",["133"],"React Hook useEffect has missing dependencies: 'idx' and 'numToLetter'. Either include them or remove the dependency array. If 'setLetterChoice' needs the current value of 'idx', you can also switch to useReducer instead of useState and read 'idx' in the reducer.",["134"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'setRoomCode' is assigned a value but never used.","'setPin' is assigned a value but never used.","'setShowResults' is assigned a value but never used.",["131"],["132"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [history, match.params.quizId, name, quizOwner, score, showResults]",{"range":"139","text":"140"},"Update the dependencies array to be: [idx, numToLetter]",{"range":"141","text":"142"},[1142,1155],"[history, match.params.quizId, name, quizOwner, score, showResults]",[3497,3499],"[idx, numToLetter]"]
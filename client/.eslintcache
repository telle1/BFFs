[{"/Users/tiffanyyelle/src/Project3/client/src/index.js":"1","/Users/tiffanyyelle/src/Project3/client/src/reportWebVitals.js":"2","/Users/tiffanyyelle/src/Project3/client/src/App.js":"3","/Users/tiffanyyelle/src/Project3/client/src/components/Hero/hero.js":"4","/Users/tiffanyyelle/src/Project3/client/src/components/Invite/invite.js":"5","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/allcards.js":"6","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/card.js":"7","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/question.js":"8","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/questionDropdown.js":"9","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/ansOption.js":"10","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/addAns.js":"11","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerCards.js":"12"},{"size":500,"mtime":1607375890745,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607375890747,"results":"15","hashOfConfig":"14"},{"size":9440,"mtime":1607485008332,"results":"16","hashOfConfig":"14"},{"size":844,"mtime":1607462742546,"results":"17","hashOfConfig":"14"},{"size":393,"mtime":1607462071788,"results":"18","hashOfConfig":"14"},{"size":3494,"mtime":1607484730173,"results":"19","hashOfConfig":"14"},{"size":3970,"mtime":1607484960814,"results":"20","hashOfConfig":"14"},{"size":599,"mtime":1607460561643,"results":"21","hashOfConfig":"14"},{"size":1208,"mtime":1607460606840,"results":"22","hashOfConfig":"14"},{"size":2094,"mtime":1607475106785,"results":"23","hashOfConfig":"14"},{"size":346,"mtime":1607459508402,"results":"24","hashOfConfig":"14"},{"size":735,"mtime":1607489117933,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"2kkxo5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tiffanyyelle/src/Project3/client/src/index.js",[],["53","54"],"/Users/tiffanyyelle/src/Project3/client/src/reportWebVitals.js",[],"/Users/tiffanyyelle/src/Project3/client/src/App.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Hero/hero.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Invite/invite.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/allcards.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/card.js",["55","56"],"import React, { useEffect, useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport './card.css';\nimport AnsOption from './answer/ansOption';\nimport AddAnswer from './answer/addAns';\nimport Question from './question/question';\nimport QuestionDropdown from './question/questionDropdown';\n\nfunction Card({\n  questionNumber,\n  cardColor,\n  premadeQuestions,\n  defaultQ,\n  defaultA,\n  allQuizAns,\n  setAllQuizAns,\n  quizInfo,\n  setQuizInfo,\n}) {\n  const [question, setQuestion] = useState(defaultQ);\n  const [customQ, setCustomQ] = useState(false);\n  const [ansOptions, setAnsOptions] = useState(defaultA);\n  const [correctAnswer, setCorrectAnswer] = useState(\"\")\n  const [bgColor, setBgColor] = useState(cardColor);\n\n  useEffect(() => {\n    setQuizInfo((quizInfo) => [\n      ...quizInfo,\n      {\n        number: questionNumber,\n        bgColor: bgColor,\n        question: question,\n        correctAnswer: correctAnswer,\n        answerOptions: ansOptions,\n      },\n    ]);\n  }, [bgColor, question, correctAnswer, ansOptions]);\n\n  const changeCardColor = (color) => {\n    setBgColor(color);\n\n    let updateBgColor = quizInfo.map((questionInfo, i) => {\n      if (i + 1 == questionNumber) {\n        return { ...questionInfo, bgColor: bgColor };\n      } else {\n        return questionInfo;\n      }\n    });\n    setQuizInfo(updateBgColor);\n  };\n\n  return (\n    <Row key={questionNumber} className='mb-5'>\n      <Col>\n        <div className='card' style={{ backgroundColor: bgColor }}>\n          <div className='card-content'>\n            <h2 className='font-weight-bold'>QUESTION {questionNumber}</h2>\n            {/* Question Components */}\n            <div className='question mb-2'>\n              {/* Question input field */}\n              <Question\n                question={question}\n                setQuestion={setQuestion}\n                customQ={customQ}\n                setAnsOptions={setAnsOptions}\n              />\n              {/* Additional Question Options/Dropdown */}\n              <QuestionDropdown\n                premadeQuestions={premadeQuestions}\n                setQuestion={setQuestion}\n                setAnsOptions={setAnsOptions}\n                setCustomQ={setCustomQ}\n              />\n            </div>\n\n            {/* Answer Components */}\n            <div>\n              {/* Answer Options */}\n              {/* {console.log('LIST OF ANS OPTIONS', ansOptions)} */}\n              {ansOptions.map((ansOption, i) => (\n                <AnsOption\n                  key={i}\n                  id={i}\n                  ansOption={ansOption}\n                  ansOptions={ansOptions}\n                  setAnsOptions={setAnsOptions}\n                  correctAnswer={correctAnswer}\n                  setCorrectAnswer={setCorrectAnswer}\n                  questionNumber={questionNumber}\n                  allQuizAns={allQuizAns}\n                  setAllQuizAns={setAllQuizAns}\n                />\n              ))}\n              {/* Add Answer Option */}\n              {ansOptions.length < 6 ? (\n                <AddAnswer\n                  ansOptions={ansOptions}\n                  setAnsOptions={setAnsOptions}\n                />\n              ) : null}\n            </div>\n\n            {/* Change card background color */}\n            <div className='mt-2 d-flex justify-content-center'>\n              {[\n                '#FF9AA2',\n                '#FFB7B2',\n                '#FFB347',\n                '#FFDAC1',\n                '#B5EAD7',\n                '#E2F0CB',\n                '#85E3FF',\n                '#ACE7FF',\n                '#B28DFF',\n                '#97A2FF',\n              ].map((color) => (\n                <div\n                  className='btn pick-a-color mr-1'\n                  style={{ backgroundColor: color }}\n                  onClick={() => changeCardColor(color)}\n                ></div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Card;\n","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/question.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/question/questionDropdown.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/ansOption.js",["57"],"import React, { useEffect, useState } from 'react';\nimport './ansOption.css'\n\nfunction AnsOption({\n    id,\n    ansOption,\n    setAnsOptions,\n    ansOptions,\n    questionNumber,\n    allQuizAns,\n    correctAnswer,\n    setCorrectAnswer,\n    setAllQuizAns\n  }) {\n\n    const [ansText, setAnsText] = useState();\n    useEffect(() => {\n      setAnsText(ansOption);\n    }, [ansOption]);\n  \n    const rmvAnswer = (e) => {\n      e.preventDefault();\n      const newAnsOptions = ansOptions.filter((ans, i) => i !== id);\n      setAnsOptions(newAnsOptions);\n    };\n  \n    return (\n      <div className='answer-choice d-flex justify-content-center align-items-center'>\n        <input key={id}\n          type='radio'\n          id={id}\n          name='answer_options'\n          value={ansText}\n          className='mr-1'\n          onClick={() =>\n            // (e) => {\n            // setAllQuizAns((allQuizAns) => [\n            //   ...allQuizAns,\n            //   { question: questionNumber, answerNum: id + 1 },\n            // ]);\n            // console.log(id+1, 'ANSWER CHOICE')\n            setCorrectAnswer(id+1)\n            // console.log('WHATS IN CORRECT ASNWER',correctAnswer)\n          }\n          required\n        />\n        <label htmlFor='answer-option' className='my-0 mr-2'>\n          <textarea\n            rows='2'\n            className='answer-option'\n            value={ansText}\n            onChange={(e) => {\n              setAnsText(e.target.value)\n\n              let updatedAnsOptions = ansOptions.map((ansOption,i) => {\n                if (i == id){\n                  console.log('WHTS IN ANS OPTION', ansOption)\n                  return ansOption = e.target.value;\n                } else {\n                  return ansOption\n                }\n              })\n              setAnsOptions(updatedAnsOptions)\n            }} //setAnsOptions(e.target.value)\n          ></textarea>\n        </label>\n  \n        <button className='btn' onClick={rmvAnswer}>\n          <i className='fas fa-times' style={{ color: 'white' }}></i>\n        </button>\n      </div>\n    );\n  }\n\nexport default AnsOption;","/Users/tiffanyyelle/src/Project3/client/src/components/Cards/create_quiz/answer/addAns.js",[],"/Users/tiffanyyelle/src/Project3/client/src/components/Cards/take_quiz/quizTakerCards.js",["58","59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":37,"column":6,"nodeType":"66","endLine":37,"endColumn":52,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":43,"column":17,"nodeType":"70","messageId":"71","endLine":43,"endColumn":19},{"ruleId":"68","severity":1,"message":"69","line":56,"column":23,"nodeType":"70","messageId":"71","endLine":56,"endColumn":25},{"ruleId":"72","severity":1,"message":"73","line":8,"column":12,"nodeType":"74","messageId":"75","endLine":8,"endColumn":17},{"ruleId":"72","severity":1,"message":"76","line":8,"column":19,"nodeType":"74","messageId":"75","endLine":8,"endColumn":28},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'questionNumber' and 'setQuizInfo'. Either include them or remove the dependency array. If 'setQuizInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["79"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'score' is assigned a value but never used.","Identifier","unusedVar","'setScores' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [bgColor, question, correctAnswer, ansOptions, setQuizInfo, questionNumber]",{"range":"82","text":"83"},[993,1039],"[bgColor, question, correctAnswer, ansOptions, setQuizInfo, questionNumber]"]